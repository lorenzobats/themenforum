{"_type":"export","__export_format":4,"__export_date":"2023-02-12T17:00:29.033Z","__export_source":"insomnia.desktop.app:v2022.4.2","resources":[{"_id":"req_wrk_2aa7aad1443e4848a5d1933215d4e1ff0dd5052c","parentId":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1ffb233e775","modified":1676220498080,"created":1676215683346,"url":"{{ base_url }}/api/v1/users","name":"registerUser","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"username\": \"newuser\",\n  \"password\": \"newuser\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_f32f4f5281574fadad70c564018f756f"}],"authentication":{},"metaSortKey":-1676215683346,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1ffb233e775","parentId":"wrk_2aa7aad1443e4848a5d1933215d4e1ff","modified":1676219072673,"created":1676215683355,"name":"Registration","description":"Registration","environment":{},"environmentPropertyOrder":null,"metaSortKey":-100,"_type":"request_group"},{"_id":"wrk_2aa7aad1443e4848a5d1933215d4e1ff","parentId":null,"modified":1676215668635,"created":1676215668635,"name":"swa-themenforum.yaml","description":"","scope":"design","_type":"workspace"},{"_id":"req_wrk_2aa7aad1443e4848a5d1933215d4e1ffcabe3097","parentId":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1ff57f2b181","modified":1676220499246,"created":1676215683347,"url":"{{ base_url }}/api/v1/users","name":"getAllUsers","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"basic","username":"{{ httpUsername }}","password":"{{ httpPassword }}"},"metaSortKey":-1676215683347,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1ff57f2b181","parentId":"wrk_2aa7aad1443e4848a5d1933215d4e1ff","modified":1676219075564,"created":1676215683355,"name":"Users","description":"Zugriff auf die Nutzer","environment":{},"environmentPropertyOrder":null,"metaSortKey":-75,"_type":"request_group"},{"_id":"req_wrk_2aa7aad1443e4848a5d1933215d4e1ff74f1d1d1","parentId":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1ff57f2b181","modified":1676220500827,"created":1676215683345,"url":"{{ base_url }}/api/v1/users/name/{{ username }}","name":"getUserByName","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"basic","username":"{{ httpUsername }}","password":"{{ httpPassword }}"},"metaSortKey":-1676215683345,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_2aa7aad1443e4848a5d1933215d4e1ff38e8e88f","parentId":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1ff57f2b181","modified":1676220507783,"created":1676215683344,"url":"{{ base_url }}/api/v1/users/{{ _.userId_afuchs }}","name":"deleteUser","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{"type":"basic","username":"{{ httpUsername }}","password":"{{ httpPassword }}"},"metaSortKey":-1676215683344,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_2aa7aad1443e4848a5d1933215d4e1ff561e1677","parentId":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1ff07e4f9c2","modified":1676215683350,"created":1676215683350,"url":"{{ base_url }}/api/v1/topics","name":"getAllTopics","description":"","method":"GET","body":{},"parameters":[{"name":"search","disabled":true,"value":"string"}],"headers":[],"authentication":{},"metaSortKey":-1676215683350,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1ff07e4f9c2","parentId":"wrk_2aa7aad1443e4848a5d1933215d4e1ff","modified":1676219064981,"created":1676215683355,"name":"Topics","description":"Zugriff auf die Themen","environment":{},"environmentPropertyOrder":null,"metaSortKey":-50,"_type":"request_group"},{"_id":"req_wrk_2aa7aad1443e4848a5d1933215d4e1ff03989b3f","parentId":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1ff07e4f9c2","modified":1676220519322,"created":1676215683350,"url":"{{ base_url }}/api/v1/topics","name":"createTopic","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"title\": \"NeuesThema\",\n  \"description\": \"Die Beschreibung des Themas\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_288dd3f0fd894ac7b108cead7298cb3a"}],"authentication":{"type":"basic","username":"{{ httpUsername }}","password":"{{ httpPassword }}"},"metaSortKey":-1676215683350,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_2aa7aad1443e4848a5d1933215d4e1ffdc49eaa6","parentId":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1ff07e4f9c2","modified":1676219318756,"created":1676215683349,"url":"{{ base_url }}/api/v1/topics/{{ _.topicId }}","name":"getTopicById","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1676215683349,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_2aa7aad1443e4848a5d1933215d4e1ffd6bac8c5","parentId":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1ff07e4f9c2","modified":1676220520438,"created":1676215683348,"url":"{{ base_url }}/api/v1/topics/{{ _.deleteTopicId }}","name":"deleteTopic","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{"type":"basic","username":"{{ httpUsername }}","password":"{{ httpPassword }}"},"metaSortKey":-1676215683348,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_2aa7aad1443e4848a5d1933215d4e1ff7536ecb3","parentId":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1ffa0ca0c31","modified":1676220764933,"created":1676215683352,"url":"{{ base_url }}/api/v1/posts","name":"createPost","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"title\": \"Ein neuer Post\",\n  \"content\": \"Der Inhalt eines neuen Posts\",\n  \"topicId\": \"{{ _.topicId }}\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_35e17950ca774f1ca4006ba315313a44"}],"authentication":{"type":"basic","username":"{{ httpUsername }}","password":"{{ httpPassword }}"},"metaSortKey":0,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1ffa0ca0c31","parentId":"wrk_2aa7aad1443e4848a5d1933215d4e1ff","modified":1676219061078,"created":1676215683356,"name":"Posts","description":"Zugriff auf die Posts","environment":{},"environmentPropertyOrder":null,"metaSortKey":0,"_type":"request_group"},{"_id":"req_wrk_2aa7aad1443e4848a5d1933215d4e1ff8a4967ed","parentId":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1ffa0ca0c31","modified":1676221150078,"created":1676215683352,"url":"{{ base_url }}/api/v1/posts","name":"getPosts","description":"","method":"GET","body":{},"parameters":[{"name":"dateFrom","disabled":true,"value":"2022-03-10T12:15:50","id":"pair_e96d7fef91d34f38b087eaf007af7382"},{"name":"dateTo","disabled":true,"value":"2023-01-30T12:15:50","id":"pair_831d8085a6af44938171806e9f14bd39"},{"name":"includeComments","disabled":true,"value":"false","id":"pair_26025e7f9eb443978ab5ca7283ed5aa3"},{"name":"orderBy","disabled":true,"value":"ASC","id":"pair_3d58be1b229b45b281ead10e30935b58"},{"name":"sortBy","disabled":true,"value":"DATE","id":"pair_d47d5161d77a409da31937442a2c0bba"},{"name":"topic","disabled":true,"value":"Autos","id":"pair_980a42a6285848f09aefb49175cf18e3"},{"name":"topicId","disabled":true,"value":"{{ _.topicId }}","id":"pair_f397ccce6ca84d89a2ff5b5bbb71c8a6"},{"name":"userId","disabled":true,"value":"{{ _.userId_lbattist }}","id":"pair_41da3b4fd6654633bbb60b03908fe065"},{"name":"username","disabled":true,"value":"{{ _.username }}","id":"pair_eee5de1cf5954ae29e36c66c6618c416"}],"headers":[],"authentication":{},"metaSortKey":100,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_2aa7aad1443e4848a5d1933215d4e1fff273bd6a","parentId":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1ffa0ca0c31","modified":1676220758455,"created":1676215683351,"url":"{{ base_url }}/api/v1/posts/{{ _.postId }}","name":"getPostById","description":"","method":"GET","body":{},"parameters":[{"name":"includeComments","disabled":true,"value":"true","id":"pair_b3761f873b464ed0bdc50942d9e19675"},{"name":"orderBy","disabled":true,"value":"DESC","id":"pair_dfe7e67d63be40db88cc54fff86ac1f9"},{"name":"sortBy","disabled":true,"value":"VOTES","id":"pair_16d9019b79b94662bd8850fd5dbaa13d"}],"headers":[],"authentication":{},"metaSortKey":200,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_2aa7aad1443e4848a5d1933215d4e1ff776385da","parentId":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1ffa0ca0c31","modified":1676220762817,"created":1676215683351,"url":"{{ base_url }}/api/v1/posts/{{ _.postId }}","name":"deletePost","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{"type":"basic","username":"{{ httpUsername }}","password":"{{ httpPassword }}"},"metaSortKey":300,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_2aa7aad1443e4848a5d1933215d4e1ff1e2bd7e6","parentId":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1ffa0ca0c31","modified":1676220814605,"created":1676215683351,"url":"{{ base_url }}/api/v1/posts/{{ _.postIdUpdate }}","name":"updatePost","description":"","method":"PATCH","body":{"mimeType":"application/json","text":"{\n  \"title\": \"Neuer Titel von lbattists Post\",\n  \"content\": \"Neuer Inhalt\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_74d3c91262994ff3bc1c76060745aef7"}],"authentication":{"type":"basic","username":"{{ httpUsername }}","password":"{{ httpPassword }}"},"metaSortKey":350,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_2aa7aad1443e4848a5d1933215d4e1ff800a2be9","parentId":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1fffce06e20","modified":1676215683354,"created":1676215683354,"url":"{{ base_url }}/api/v1/comments","name":"getAllComments","description":"","method":"GET","body":{},"parameters":[{"name":"includeReplies","disabled":true,"value":"true"}],"headers":[],"authentication":{},"metaSortKey":-1676215683354,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1fffce06e20","parentId":"wrk_2aa7aad1443e4848a5d1933215d4e1ff","modified":1676219061078,"created":1676215683356,"name":"Comments","description":"Zugriff auf die Kommentare","environment":{},"environmentPropertyOrder":null,"metaSortKey":100,"_type":"request_group"},{"_id":"req_wrk_2aa7aad1443e4848a5d1933215d4e1ffdb4aeea8","parentId":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1fffce06e20","modified":1676220798926,"created":1676215683353,"url":"{{ base_url }}/api/v1/comments/{{ _.commentId }}","name":"getCommentById","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1676215683353,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_2aa7aad1443e4848a5d1933215d4e1ffd14a8800","parentId":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1fffce06e20","modified":1676220837708,"created":1676215683353,"url":"{{ base_url }}/api/v1/comments","name":"commentPost","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"postId\": \"{{ _.postIdUpdate }}\",\n  \"text\": \"Mein Kommentar\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_ffc5736f04b14254b105909109ca165b"}],"authentication":{"type":"basic","username":"{{ httpUsername }}","password":"{{ httpPassword }}"},"metaSortKey":-1676215683353,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_2aa7aad1443e4848a5d1933215d4e1ff6d815d61","parentId":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1fffce06e20","modified":1676220912669,"created":1676215683353,"url":"{{ base_url }}/api/v1/comments/{{ _.commentId }}","name":"replyToComment","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"text\": \"Meine Antwort auf ein Kommentar\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_ee99d4237e764d45bf223eaa7d862962"}],"authentication":{"type":"basic","username":"{{ httpUsername }}","password":"{{ httpPassword }}"},"metaSortKey":-1676215683353,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_2aa7aad1443e4848a5d1933215d4e1ffcaa2784a","parentId":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1fffce06e20","modified":1676220917827,"created":1676215683352,"url":"{{ base_url }}/api/v1/comments/{{ _.commentId }}","name":"deleteComment","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{"type":"basic","username":"{{ httpUsername }}","password":"{{ httpPassword }}"},"metaSortKey":-1676215683352,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_2aa7aad1443e4848a5d1933215d4e1fffd63f1ed","parentId":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1ffb66c4b27","modified":1676221144547,"created":1676215683333,"url":"{{ base_url }}/api/v1/votes","name":"vote","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"voteType\": \"UP\",\n  \"entityId\": \"{{ _.postIdForVote }}\",\n  \"entityType\": \"POST\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_078f44a81c264826bdd964ba979a4bcd"}],"authentication":{"type":"basic","username":"{{ httpUsername }}","password":"{{ httpPassword }}"},"metaSortKey":-1676215683389,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1ffb66c4b27","parentId":"wrk_2aa7aad1443e4848a5d1933215d4e1ff","modified":1676219061078,"created":1676215683354,"name":"Votes","description":"Zugriff auf die Votes der Kommentare und Posts","environment":{},"environmentPropertyOrder":null,"metaSortKey":500,"_type":"request_group"},{"_id":"req_wrk_2aa7aad1443e4848a5d1933215d4e1ff48b68922","parentId":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1ffb66c4b27","modified":1676221145044,"created":1676215683339,"url":"{{ base_url }}/api/v1/votes","name":"getAllVotes","description":"","method":"GET","body":{},"parameters":[{"name":"username","disabled":true,"value":"string","id":"pair_9812c0ae09464bd0b45f90a76f1edc01"}],"headers":[],"authentication":{"type":"basic","username":"{{ httpUsername }}","password":"{{ httpPassword }}"},"metaSortKey":-1676215683339,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_2aa7aad1443e4848a5d1933215d4e1ffb7a4ef0c","parentId":"fld_wrk_2aa7aad1443e4848a5d1933215d4e1ffb66c4b27","modified":1676221139600,"created":1676215683329,"url":"{{ base_url }}/api/v1/votes/3562d1d1-079c-4214-90eb-b3eacd4b4a71","name":"deleteVote","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{"type":"basic","username":"{{ httpUsername }}","password":"{{ httpPassword }}"},"metaSortKey":-1676215683329,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_d4e37972b183887868fe35a1fec3f65d9e7827f2","parentId":"wrk_2aa7aad1443e4848a5d1933215d4e1ff","modified":1676221038298,"created":1676215668645,"name":"Base Environment","data":{"base_url":"{{ scheme }}://{{ host }}{{ base_path }}","username":"oschluet","userId_afuchs":"c8f79ffc-7ce0-4673-a22c-5cf210b83f13","userId_oschluet":"78188b10-4733-4fca-8dfd-e07aee389383","userId_lbattist":"efac4cf6-4188-4a18-8489-4fc98f3633d6","postId":"4cfe8a99-f71a-476c-a2cb-dae7cb86872e","postIdForVote":"c75d5bba-a840-4ce2-998c-07a2f00cc49b","postIdUpdate":"06f21fbb-1730-446d-b3c2-44dd8a839c12","commentId":"2c210dd8-ff07-4adb-ad4c-67625ae7c295","voteId":"","topicId":"a70d18cf-7b53-43fe-86de-1277fa476864","deleteTopicId":"9b0d4d55-9c40-4f7e-5c5a-9dbf9e957f38"},"dataPropertyOrder":{"&":["base_url","username","userId_afuchs","userId_oschluet","userId_lbattist","postId","postIdForVote","postIdUpdate","commentId","voteId","topicId","deleteTopicId"]},"color":null,"isPrivate":false,"metaSortKey":1676215668645,"_type":"environment"},{"_id":"jar_d4e37972b183887868fe35a1fec3f65d9e7827f2","parentId":"wrk_2aa7aad1443e4848a5d1933215d4e1ff","modified":1676215668646,"created":1676215668646,"name":"Default Jar","cookies":[],"_type":"cookie_jar"},{"_id":"spc_1966051fd2744eeb85afe3037caefe64","parentId":"wrk_2aa7aad1443e4848a5d1933215d4e1ff","modified":1676218740806,"created":1676215679710,"fileName":"swa-themenforum.yaml","contents":"---\nopenapi: 3.0.3\ninfo:\n  title: SWA Themenforum API (development)\n  description: Die Themenforum-API wurde im Modul Softwarearchitektur entwickelt\n  contact:\n    name: Themenforum-API Support\n    email: lorenzo.battistion@hs-osnabrueck.de\n  version: 1.0.0\nservers:\n- url: http://localhost:8080\n  description: Auto generated value\n- url: http://0.0.0.0:8080\n  description: Auto generated value\ntags:\n- name: Comments\n  description: Zugriff auf die Kommentare\n- name: Posts\n  description: Zugriff auf die Posts\n- name: Registration\n  description: Registration\n- name: Topics\n  description: Zugriff auf die Themen\n- name: Users\n  description: Zugriff auf die Nutzer\n- name: Votes\n  description: Zugriff auf die Votes der Kommentare und Posts\npaths:\n  /api/v1/comments:\n    get:\n      tags:\n      - Comments\n      summary: getAllComments\n      description: Ermöglicht für den Zugriff auf Alle Kommentare\n      operationId: getAllComments\n      parameters:\n      - name: includeReplies\n        in: query\n        schema:\n          default: true\n          type: boolean\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CommentDto'\n    post:\n      tags:\n      - Comments\n      summary: commentPost\n      description: Erstellt ein neues Kommentar auf den Post mit der übergebenen ID\n      operationId: commentPost\n      requestBody:\n        description: Comment to create\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CommentCreationDto'\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommentDto'\n        \"401\":\n          description: Not Authorized\n        \"403\":\n          description: Not Allowed\n      security:\n      - SecurityScheme:\n        - admin\n        - member\n  /api/v1/comments/{id}:\n    get:\n      tags:\n      - Comments\n      summary: getCommentById\n      description: Holt das Kommentar mit der übergebenen ID\n      operationId: getCommentById\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommentDto'\n    post:\n      tags:\n      - Comments\n      summary: replyToComment\n      description: Erstellt eine Antwort auf das Kommentar mit der übergebenen ID\n      operationId: replyToComment\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Reply to create\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CommentReplyDto'\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommentDto'\n        \"401\":\n          description: Not Authorized\n        \"403\":\n          description: Not Allowed\n      security:\n      - SecurityScheme:\n        - admin\n        - member\n    delete:\n      tags:\n      - Comments\n      summary: deleteComment\n      description: Löscht das Kommentar mit der übergebenen ID\n      operationId: deleteComment\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CommentDto'\n        \"401\":\n          description: Not Authorized\n        \"403\":\n          description: Not Allowed\n      security:\n      - SecurityScheme:\n        - member\n        - admin\n  /api/v1/posts:\n    get:\n      tags:\n      - Posts\n      summary: getPosts\n      description: \"Holt alle Posts, die den Query-Parametern entsprechen\"\n      operationId: getPosts\n      parameters:\n      - name: dateFrom\n        in: query\n        schema:\n          $ref: '#/components/schemas/LocalDateTime'\n      - name: dateTo\n        in: query\n        schema:\n          $ref: '#/components/schemas/LocalDateTime'\n      - name: includeComments\n        in: query\n        schema:\n          default: true\n          type: boolean\n      - name: orderBy\n        in: query\n        schema:\n          default: DESC\n          type: string\n      - name: sortBy\n        in: query\n        schema:\n          default: VOTES\n          type: string\n      - name: topic\n        in: query\n        schema:\n          type: string\n      - name: topicId\n        in: query\n        schema:\n          $ref: '#/components/schemas/UUID'\n      - name: userId\n        in: query\n        schema:\n          $ref: '#/components/schemas/UUID'\n      - name: username\n        in: query\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PostDto'\n    post:\n      tags:\n      - Posts\n      summary: createPost\n      description: Erstellt einen neuen Post\n      operationId: createPost\n      requestBody:\n        description: Post to create\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostCreationDto'\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostDto'\n        \"401\":\n          description: Not Authorized\n        \"403\":\n          description: Not Allowed\n      security:\n      - SecurityScheme:\n        - admin\n        - member\n  /api/v1/posts/{id}:\n    get:\n      tags:\n      - Posts\n      summary: getPostById\n      description: Holt den Post mit der übergebenen ID\n      operationId: getPostById\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: includeComments\n        in: query\n        schema:\n          default: true\n          type: boolean\n      - name: orderBy\n        in: query\n        schema:\n          default: DESC\n          type: string\n      - name: sortBy\n        in: query\n        schema:\n          default: VOTES\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostDto'\n    delete:\n      tags:\n      - Posts\n      summary: deletePost\n      description: Löscht den Post mit der übergebenen ID\n      operationId: deletePost\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostDto'\n        \"401\":\n          description: Not Authorized\n        \"403\":\n          description: Not Allowed\n      security:\n      - SecurityScheme:\n        - member\n        - admin\n    patch:\n      tags:\n      - Posts\n      summary: updatePost\n      description: Aktualisiert den Post mit der übergebenen ID\n      operationId: updatePost\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Post to update\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdatePostDto'\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostDto'\n        \"401\":\n          description: Not Authorized\n        \"403\":\n          description: Not Allowed\n      security:\n      - SecurityScheme:\n        - member\n        - admin\n  /api/v1/topics:\n    get:\n      tags:\n      - Topics\n      summary: getAllTopics\n      description: Holt alle Topics\n      operationId: getAllTopics\n      parameters:\n      - name: search\n        in: query\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TopicDto'\n    post:\n      tags:\n      - Topics\n      summary: createTopic\n      description: Erstellt ein neues Topic\n      operationId: createTopic\n      requestBody:\n        description: Topic to create\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TopicCreationDto'\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TopicDto'\n        \"401\":\n          description: Not Authorized\n        \"403\":\n          description: Not Allowed\n      security:\n      - SecurityScheme:\n        - member\n        - admin\n  /api/v1/topics/{id}:\n    get:\n      tags:\n      - Topics\n      summary: getTopicById\n      description: Holt das Topic mit der übergebenen ID\n      operationId: getTopicById\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TopicDto'\n    delete:\n      tags:\n      - Topics\n      summary: deleteTopic\n      description: Löscht das Topic mit der übergebenen ID\n      operationId: deleteTopic\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TopicDto'\n        \"401\":\n          description: Not Authorized\n        \"403\":\n          description: Not Allowed\n      security:\n      - SecurityScheme:\n        - admin\n  /api/v1/users:\n    get:\n      tags:\n      - Users\n      summary: getAllUsers\n      description: Holt alle User\n      operationId: getAllUsers\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDto'\n        \"401\":\n          description: Not Authorized\n        \"403\":\n          description: Not Allowed\n      security:\n      - SecurityScheme:\n        - admin\n    post:\n      tags:\n      - Registration\n      summary: registerUser\n      description: Registriert einen neuen User\n      operationId: registerUser\n      requestBody:\n        description: User to register\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserRegistrationDto'\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDto'\n  /api/v1/users/name/{username}:\n    get:\n      tags:\n      - Users\n      summary: getUserByName\n      description: Holt den User mit dem übergebenen Username\n      operationId: getUserByName\n      parameters:\n      - name: username\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDto'\n        \"401\":\n          description: Not Authorized\n        \"403\":\n          description: Not Allowed\n      security:\n      - SecurityScheme:\n        - admin\n  /api/v1/users/{id}:\n    delete:\n      tags:\n      - Users\n      summary: deleteUser\n      description: Löscht den User mit der übergebenen ID\n      operationId: deleteUser\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDto'\n        \"401\":\n          description: Not Authorized\n        \"403\":\n          description: Not Allowed\n      security:\n      - SecurityScheme:\n        - admin\n  /api/v1/votes:\n    get:\n      tags:\n      - Votes\n      summary: getAllVotes\n      description: Holt alle Votes\n      operationId: getAllVotes\n      parameters:\n      - name: username\n        in: query\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/VoteDto'\n        \"401\":\n          description: Not Authorized\n        \"403\":\n          description: Not Allowed\n      security:\n      - SecurityScheme:\n        - admin\n        - member\n    post:\n      tags:\n      - Votes\n      summary: vote\n      description: Erstellt einen neuen Vote\n      operationId: vote\n      requestBody:\n        description: Vote to create\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VoteCreationDto'\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/VoteDto'\n        \"401\":\n          description: Not Authorized\n        \"403\":\n          description: Not Allowed\n      security:\n      - SecurityScheme:\n        - admin\n        - member\n  /api/v1/votes/{id}:\n    delete:\n      tags:\n      - Votes\n      summary: deleteVote\n      description: Löscht den Vote mit der übergebenen ID\n      operationId: deleteVote\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/VoteDto'\n        \"401\":\n          description: Not Authorized\n        \"403\":\n          description: Not Allowed\n      security:\n      - SecurityScheme:\n        - admin\n        - member\ncomponents:\n  schemas:\n    CommentCreationDto:\n      required:\n      - postId\n      - text\n      type: object\n      properties:\n        postId:\n          pattern: \\S\n          type: string\n        text:\n          pattern: \\S\n          type: string\n    CommentDto:\n      type: object\n      properties:\n        id:\n          type: string\n        username:\n          type: string\n        text:\n          type: string\n        createdAt:\n          $ref: '#/components/schemas/LocalDateTime'\n        parentId:\n          type: string\n        replies:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommentDto'\n        downVoteCount:\n          format: int32\n          type: integer\n        upVoteCount:\n          format: int32\n          type: integer\n    CommentReplyDto:\n      required:\n      - text\n      type: object\n      properties:\n        text:\n          pattern: \\S\n          type: string\n    LocalDateTime:\n      format: date-time\n      type: string\n      example: 2022-03-10T12:15:50\n    PostCreationDto:\n      required:\n      - title\n      - content\n      - topicId\n      type: object\n      properties:\n        title:\n          pattern: \\S\n          type: string\n        content:\n          pattern: \\S\n          type: string\n        topicId:\n          pattern: \\S\n          type: string\n    PostDto:\n      type: object\n      properties:\n        id:\n          type: string\n        title:\n          type: string\n        content:\n          type: string\n        createdAt:\n          $ref: '#/components/schemas/LocalDateTime'\n        creator:\n          type: string\n        topic:\n          $ref: '#/components/schemas/TopicDto'\n        comments:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommentDto'\n        downvoteCount:\n          format: int32\n          type: integer\n        upvoteCount:\n          format: int32\n          type: integer\n    TopicCreationDto:\n      required:\n      - title\n      - description\n      type: object\n      properties:\n        title:\n          pattern: \\S\n          type: string\n        description:\n          pattern: \\S\n          type: string\n    TopicDto:\n      type: object\n      properties:\n        id:\n          type: string\n        title:\n          type: string\n        description:\n          type: string\n        createdAt:\n          $ref: '#/components/schemas/LocalDateTime'\n        owner:\n          type: string\n        numberOfPosts:\n          format: int64\n          type: integer\n    UUID:\n      format: uuid\n      pattern: \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\"\n      type: string\n    UpdatePostDto:\n      type: object\n      properties:\n        title:\n          type: string\n        content:\n          type: string\n    UserDto:\n      type: object\n      properties:\n        id:\n          type: string\n        username:\n          type: string\n    UserRegistrationDto:\n      required:\n      - username\n      - password\n      type: object\n      properties:\n        username:\n          pattern: \\S\n          type: string\n        password:\n          pattern: \\S\n          type: string\n    VoteCreationDto:\n      required:\n      - voteType\n      - entityId\n      - entityType\n      type: object\n      properties:\n        voteType:\n          pattern: \\S\n          type: string\n        entityId:\n          pattern: \\S\n          type: string\n        entityType:\n          pattern: \\S\n          type: string\n    VoteDto:\n      type: object\n      properties:\n        id:\n          type: string\n        user:\n          type: string\n        voteType:\n          $ref: '#/components/schemas/VoteType'\n        createdAt:\n          $ref: '#/components/schemas/LocalDateTime'\n        votedEntityType:\n          $ref: '#/components/schemas/VotedEntityType'\n        votedEntityId:\n          $ref: '#/components/schemas/UUID'\n    VoteType:\n      enum:\n      - UP\n      - DOWN\n      type: string\n    VotedEntityType:\n      enum:\n      - POST\n      - COMMENT\n      type: string\n  securitySchemes:\n    SecurityScheme:\n      type: http\n      description: Authentication\n      scheme: basic\n","contentType":"yaml","_type":"api_spec"},{"_id":"env_env_d4e37972b183887868fe35a1fec3f65d9e7827f2_sub__973503d5","parentId":"env_d4e37972b183887868fe35a1fec3f65d9e7827f2","modified":1676221025834,"created":1676215683357,"name":"admin","data":{"scheme":"http","base_path":"","host":"localhost:8080","httpUsername":"admin","httpPassword":"admin"},"dataPropertyOrder":{"&":["scheme","base_path","host","httpUsername","httpPassword"]},"color":null,"isPrivate":false,"metaSortKey":0,"_type":"environment"},{"_id":"env_1f3edc34e3474b4b908572054e1f93b1","parentId":"env_d4e37972b183887868fe35a1fec3f65d9e7827f2","modified":1676220684480,"created":1676218773045,"name":"oschluet","data":{"scheme":"http","base_path":"","host":"localhost:8080","httpUsername":"oschluet","httpPassword":"oschluet"},"dataPropertyOrder":{"&":["scheme","base_path","host","httpUsername","httpPassword"]},"color":null,"isPrivate":false,"metaSortKey":2,"_type":"environment"},{"_id":"env_cd2a2bef34f644f7acb66dd3edf81d30","parentId":"env_d4e37972b183887868fe35a1fec3f65d9e7827f2","modified":1676220786629,"created":1676218773754,"name":"lbattist","data":{"scheme":"http","base_path":"","host":"localhost:8080","httpUsername":"lbattist","httpPassword":"lbattist"},"dataPropertyOrder":{"&":["scheme","base_path","host","httpUsername","httpPassword"]},"color":null,"isPrivate":false,"metaSortKey":1,"_type":"environment"}]}